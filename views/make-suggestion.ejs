<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Make a Suggestion - Clue Game</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            padding: 20px;
            background-color: #f0f8ff;
        }
        .suggestion-container {
            margin: 20px auto;
            max-width: 800px;
            border: 1px solid #ddd;
            padding: 20px;
            border-radius: 8px;
            background-color: white;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        .player-info {
            font-size: 18px;
            margin-bottom: 20px;
            background: #f5f5f5;
            padding: 10px;
            border-radius: 5px;
        }
        .selection-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 20px;
            margin-bottom: 20px;
        }
        .selection-group {
            flex: 1;
            min-width: 200px;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            background-color: #f9f9f9;
        }
        .options-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 10px;
        }
        .option-item {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: white;
            transition: all 0.2s;
        }
        .option-item:hover {
            background-color: #f0f0f0;
        }
        .option-item.eliminated {
            background-color: #ffdddd;
            text-decoration: line-through;
            color: #999;
        }
        .suggestion-button {
            background-color: #4a6ea9;
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            margin-top: 20px;
        }
        .suggestion-button:hover {
            background-color: #3a5a8f;
        }
        .hidden {
            display: none;
        }
        .turn-notification {
            background-color: #e7f3fe;
            border: 1px solid #b6d4fe;
            color: #0062cc;
            padding: 10px;
            border-radius: 5px;
            margin-top: 15px;
        }
    </style>
</head>
<body>
    <h1>Make Your Suggestion</h1>
    
    <div class="player-info">
        Playing as: <strong><%= playerName %></strong>
    </div>
    
    <div class="suggestion-container">
        <h2>It's Your Turn!</h2>
        <p>Select one suspect, one weapon, and one room for your suggestion.</p>
        
        <form id="suggestionForm">
            <div class="selection-container">
                <div class="selection-group">
                    <h3>Select Suspect</h3>
                    <div class="options-grid">
                        <% suspects.forEach(suspect => { %>
                            <div class="option-item <%= (playerEliminatedCards && playerEliminatedCards.includes(suspect)) ? 'eliminated' : '' %>">
                                <input type="radio" name="suspect" id="suspect-<%= suspect.replace(/\s+/g, '') %>" 
                                    value="<%= suspect %>" required>
                                <label for="suspect-<%= suspect.replace(/\s+/g, '') %>"><%= suspect %></label>
                            </div>
                        <% }); %>
                    </div>
                </div>
                
                <div class="selection-group">
                    <h3>Select Weapon</h3>
                    <div class="options-grid">
                        <% weapons.forEach(weapon => { %>
                            <div class="option-item <%= (playerEliminatedCards && playerEliminatedCards.includes(weapon)) ? 'eliminated' : '' %>">
                                <input type="radio" name="weapon" id="weapon-<%= weapon.replace(/\s+/g, '') %>" 
                                    value="<%= weapon %>" required>
                                <label for="weapon-<%= weapon.replace(/\s+/g, '') %>"><%= weapon %></label>
                            </div>
                        <% }); %>
                    </div>
                </div>
                
                <div class="selection-group">
                    <h3>Select Room</h3>
                    <div class="options-grid">
                        <% rooms.forEach(room => { %>
                            <div class="option-item <%= (playerEliminatedCards && playerEliminatedCards.includes(room)) ? 'eliminated' : '' %>">
                                <input type="radio" name="room" id="room-<%= room.replace(/\s+/g, '').replace(/'/g, '') %>" 
                                    value="<%= room %>" required>
                                <label for="room-<%= room.replace(/\s+/g, '').replace(/'/g, '') %>"><%= room %></label>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
            
            <button type="submit" class="suggestion-button">Submit Suggestion</button>
        </form>
        <div id="suggestion-result" class="hidden"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const suggestionForm = document.getElementById('suggestionForm');
            
            suggestionForm.addEventListener('submit', function(event) {
                event.preventDefault();
                
                const formData = new FormData(suggestionForm);
                const suggestion = {
                    suspect: formData.get('suspect'),
                    weapon: formData.get('weapon'),
                    room: formData.get('room')
                };
                
                // Validate the form
                if (!suggestion.suspect || !suggestion.weapon || !suggestion.room) {
                    alert('Please select one option from each category.');
                    return;
                }
                
                // Send suggestion to server
                fetch('/api/submit-suggestion', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(suggestion)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const resultDiv = document.getElementById('suggestion-result');
                        resultDiv.classList.remove('hidden');

                        // Disable the form after submission
                        resultDiv.innerHTML = `<div class="turn-notification">${data.message}</div>`;
                        suggestionForm.querySelectorAll('input, button').forEach(el => el.disabled = true);
                        window.location.href = '/game'; 
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while submitting your suggestion.');
                });
            });
            
            // Function to periodically check if someone has responded to the suggestion
            function checkForSuggestionResponse() {
                const checkInterval = setInterval(() => {
                    fetch('/api/check-suggestion-status')
                        .then(response => response.json())
                        .then(data => {
                            if (data.resolved) {
                                clearInterval(checkInterval);
                                window.location.href = '/game';
                            }
                        })
                        .catch(error => {
                            console.error('Error checking suggestion status:', error);
                        });
                }, 500); // Check every half second
            }
        });
    </script>
</body>
</html>